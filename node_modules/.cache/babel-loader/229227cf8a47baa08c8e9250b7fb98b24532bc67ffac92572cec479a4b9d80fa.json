{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/**\n * ConsoleLogger singleton.\n */\nclass ConsoleLogger {\n  constructor(levels) {\n    this.levels = levels;\n  }\n  log(...data) {\n    // eslint-disable-next-line no-console\n    if (this.levels.verbose) console.log(...data);\n  }\n  info(...data) {\n    if (this.levels.info) console.info(...data);\n  }\n  debug(...data) {\n    if (this.levels.debug) console.debug(...data);\n  }\n  warn(...data) {\n    if (this.levels.warnings) console.warn(...data);\n  }\n  error(...data) {\n    if (this.levels.errors) console.error(...data);\n  }\n  static new(levels = {\n    verbose: false,\n    info: false,\n    debug: false,\n    warnings: true,\n    errors: true\n  }) {\n    if (!this.instance) this.instance = new ConsoleLogger(levels);else this.instance.levels = levels;\n    return this.instance;\n  }\n}\nexports[\"default\"] = ConsoleLogger;","map":{"version":3,"names":["ConsoleLogger","constructor","levels","log","data","verbose","console","info","debug","warn","warnings","error","errors","new","instance"],"sources":["C:\\Users\\OznurYilmaz\\Desktop\\oznur-yilmaz-website\\oznur-yilmaz-website\\node_modules\\hero-slider\\src\\modules\\ConsoleLogger.tsx"],"sourcesContent":["export type LoggerLevels = {\n  verbose: boolean;\n  info: boolean;\n  debug: boolean;\n  warnings: boolean;\n  errors: boolean;\n};\n\n/**\n * ConsoleLogger singleton.\n */\nexport default class ConsoleLogger {\n  private constructor(private levels: LoggerLevels) {}\n\n  public log(...data: unknown[]): void {\n    // eslint-disable-next-line no-console\n    if (this.levels.verbose) console.log(...data);\n  }\n\n  public info(...data: unknown[]): void {\n    if (this.levels.info) console.info(...data);\n  }\n\n  public debug(...data: unknown[]): void {\n    if (this.levels.debug) console.debug(...data);\n  }\n\n  public warn(...data: unknown[]): void {\n    if (this.levels.warnings) console.warn(...data);\n  }\n\n  public error(...data: unknown[]): void {\n    if (this.levels.errors) console.error(...data);\n  }\n\n  private static instance: ConsoleLogger | undefined;\n\n  public static new(\n    levels: LoggerLevels = {\n      verbose: false,\n      info: false,\n      debug: false,\n      warnings: true,\n      errors: true\n    }\n  ): ConsoleLogger {\n    if (!this.instance) this.instance = new ConsoleLogger(levels);\n    else this.instance.levels = levels;\n    return this.instance;\n  }\n}\n"],"mappings":";;;;;;AAQA;;AAEG;AACW,MAAOA,aAAa;EAChCC,YAA4BC,MAAoB;IAApB,IAAM,CAAAA,MAAA,GAANA,MAAM;;EAE3BC,GAAGA,CAAC,GAAGC,IAAe;;IAE3B,IAAI,IAAI,CAACF,MAAM,CAACG,OAAO,EAAEC,OAAO,CAACH,GAAG,CAAC,GAAGC,IAAI,CAAC;;EAGxCG,IAAIA,CAAC,GAAGH,IAAe;IAC5B,IAAI,IAAI,CAACF,MAAM,CAACK,IAAI,EAAED,OAAO,CAACC,IAAI,CAAC,GAAGH,IAAI,CAAC;;EAGtCI,KAAKA,CAAC,GAAGJ,IAAe;IAC7B,IAAI,IAAI,CAACF,MAAM,CAACM,KAAK,EAAEF,OAAO,CAACE,KAAK,CAAC,GAAGJ,IAAI,CAAC;;EAGxCK,IAAIA,CAAC,GAAGL,IAAe;IAC5B,IAAI,IAAI,CAACF,MAAM,CAACQ,QAAQ,EAAEJ,OAAO,CAACG,IAAI,CAAC,GAAGL,IAAI,CAAC;;EAG1CO,KAAKA,CAAC,GAAGP,IAAe;IAC7B,IAAI,IAAI,CAACF,MAAM,CAACU,MAAM,EAAEN,OAAO,CAACK,KAAK,CAAC,GAAGP,IAAI,CAAC;;EAKzC,OAAOS,GAAGA,CACfX,MAAuB;IACrBG,OAAO,EAAE,KAAK;IACdE,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,KAAK;IACZE,QAAQ,EAAE,IAAI;IACdE,MAAM,EAAE;EACT;IAED,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACA,QAAQ,GAAG,IAAId,aAAa,CAACE,MAAM,CAAC,CAAC,KACzD,IAAI,CAACY,QAAQ,CAACZ,MAAM,GAAGA,MAAM;IAClC,OAAO,IAAI,CAACY,QAAQ;;AAEvB"},"metadata":{},"sourceType":"script","externalDependencies":[]}