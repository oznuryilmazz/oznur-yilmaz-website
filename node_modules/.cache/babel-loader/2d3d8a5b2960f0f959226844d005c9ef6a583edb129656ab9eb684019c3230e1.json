{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jsxRuntime = require('react/jsx-runtime');\nvar Controller = require('../../modules/Controller.js');\nvar Manager = require('../../modules/Manager.js');\nvar composeCssClasses = require('../../utils/composeCssClasses.js');\nvar index_module = require('./index.module.css.js');\nfunction SideNav({\n  color,\n  activeColor,\n  left,\n  right,\n  isPositionedRight = true,\n  position = {\n    bottom: undefined,\n    top: '50%',\n    left: !isPositionedRight ? left || '1rem' : undefined,\n    right: isPositionedRight ? right || '1rem' : undefined,\n    transform: 'translateY(-50%)'\n  }\n}) {\n  const {\n    state: {\n      slides,\n      totalSlides\n    }\n  } = Manager.useManager();\n  const {\n    state: {\n      activeSlide\n    },\n    changeSlide\n  } = Controller.useController();\n  function renderButtons() {\n    if (!totalSlides) return [];\n    const onClickHandler = slideNumber => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n    return Array.from(slides.values()).map(({\n      number\n    }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events\n        jsxRuntime.jsxs(\"li\", Object.assign({\n          className: composeCssClasses.composeCssClasses('hero-slider-side-nav-button', index_module[\"default\"].Button, {\n            className: index_module[\"default\"].Active,\n            useIf: activeSlide === number\n          }),\n          onClick: () => onClickHandler(number),\n          style: {\n            justifyContent: isPositionedRight ? 'flex-end' : 'flex-start'\n          }\n        }, {\n          children: [jsxRuntime.jsx(\"span\", {\n            className: composeCssClasses.composeCssClasses('hero-slider-side-nav-button-line', index_module[\"default\"].Line)\n          }), jsxRuntime.jsx(\"span\", Object.assign({\n            className: composeCssClasses.composeCssClasses('hero-slider-side-nav-button-number', index_module[\"default\"].Number)\n          }, {\n            children: number.toLocaleString()\n          }))]\n        }), number)\n      );\n    });\n  }\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n  return jsxRuntime.jsx(\"ul\", Object.assign({\n    className: composeCssClasses.composeCssClasses('hero-slider-side-nav-wrapper', index_module[\"default\"].Wrapper),\n    style: Object.assign(Object.assign({}, position), CSSVariables)\n  }, {\n    children: renderButtons()\n  }));\n}\nSideNav.displayName = 'hero-slider/nav';\nexports.SideNav = SideNav;","map":{"version":3,"names":["SideNav","color","activeColor","left","right","isPositionedRight","position","bottom","undefined","top","transform","state","slides","totalSlides","Manager","useManager","activeSlide","changeSlide","Controller","useController","renderButtons","onClickHandler","slideNumber","Array","from","values","map","number","jsxRuntime","jsxs","Object","assign","className","composeCssClasses","index_module","Button","Active","useIf","onClick","style","justifyContent","children","jsx","Line","Number","toLocaleString","CSSVariables","Wrapper","displayName"],"sources":["C:\\Users\\OznurYilmaz\\Desktop\\oznur-yilmaz-website\\oznur-yilmaz-website\\node_modules\\hero-slider\\src\\components\\SideNav\\index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useController } from '../../modules/Controller';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport { NavPosition, NavProps } from '../Nav';\nimport SideNavModuleCss from './index.module.css';\n\n/**\n * `SideNav` component props.\n */\nexport interface SideNavProps extends NavProps {\n  /**\n   * Defines the inline CSS property `right` of the component.\n   */\n  right?: React.CSSProperties['right'];\n  /**\n   * Defines the inline CSS property `left` of the component.\n   */\n  left?: React.CSSProperties['left'];\n  /**\n   * Defines the position. If you set it to the left, set this to false to disable any existing `right` CSS properties and avoid any conflicts.\n   * @default true\n   */\n  isPositionedRight?: boolean;\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: undefined,\n   *    top: '50%',\n   *    left: !isPositionedRight ? left || '1rem' : undefined,\n   *    right: isPositionedRight ? right || '1rem' : undefined,\n   *    transform: 'translateY(-50%)'\n   * }\n   */\n  position?: NavPosition;\n}\n\nexport function SideNav({\n  color,\n  activeColor,\n  left,\n  right,\n  isPositionedRight = true,\n  position = {\n    bottom: undefined,\n    top: '50%',\n    left: !isPositionedRight ? left || '1rem' : undefined,\n    right: isPositionedRight ? right || '1rem' : undefined,\n    transform: 'translateY(-50%)'\n  }\n}: SideNavProps) {\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ number }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events\n        <li\n          key={number}\n          className={composeCssClasses(\n            'hero-slider-side-nav-button',\n            SideNavModuleCss.Button,\n            {\n              className: SideNavModuleCss.Active,\n              useIf: activeSlide === number\n            }\n          )}\n          onClick={() => onClickHandler(number)}\n          style={{\n            justifyContent: isPositionedRight ? 'flex-end' : 'flex-start'\n          }}\n        >\n          <span\n            className={composeCssClasses(\n              'hero-slider-side-nav-button-line',\n              SideNavModuleCss.Line\n            )}\n          />\n          <span\n            className={composeCssClasses(\n              'hero-slider-side-nav-button-number',\n              SideNavModuleCss.Number\n            )}\n          >\n            {number.toLocaleString()}\n          </span>\n        </li>\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <ul\n      className={composeCssClasses(\n        'hero-slider-side-nav-wrapper',\n        SideNavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables\n      }}\n    >\n      {renderButtons()}\n    </ul>\n  );\n}\n\n(SideNav as React.FunctionComponent).displayName = 'hero-slider/nav';\n"],"mappings":";;;;;;;;;;SAwCgBA,OAAOA,CAAC;EACtBC,KAAK;EACLC,WAAW;EACXC,IAAI;EACJC,KAAK;EACLC,iBAAiB,GAAG,IAAI;EACxBC,QAAQ,GAAG;IACTC,MAAM,EAAEC,SAAS;IACjBC,GAAG,EAAE,KAAK;IACVN,IAAI,EAAE,CAACE,iBAAiB,GAAGF,IAAI,IAAI,MAAM,GAAGK,SAAS;IACrDJ,KAAK,EAAEC,iBAAiB,GAAGD,KAAK,IAAI,MAAM,GAAGI,SAAS;IACtDE,SAAS,EAAE;;AACZ,CACY;EACb,MAAM;IACJC,KAAK,EAAE;MAAEC,MAAM;MAAEC;IAAW;EAAE,CAC/B,GAAGC,OAAA,CAAAC,UAAU,EAAE;EAEhB,MAAM;IACJJ,KAAK,EAAE;MAAEK;IAAW,CAAE;IACtBC;EAAW,CACZ,GAAGC,UAAA,CAAAC,aAAa,EAAE;EAEnB,SAASC,aAAaA,CAAA;IACpB,IAAI,CAACP,WAAW,EAAE,OAAO,EAAE;IAE3B,MAAMQ,cAAc,GAAIC,WAAmB,IAAI;MAC7C,IAAIA,WAAW,KAAKN,WAAW,EAAEC,WAAW,CAACK,WAAW,CAAC;IAC3D,CAAC;IAED,OAAOC,KAAK,CAACC,IAAI,CAACZ,MAAM,CAACa,MAAM,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC;MAAEC;IAAM,CAAE,KAAI;MACpD;;;QAGEC,UAAA,CAAAC,IAEE,OAAAC,MAAA,CAAAC,MAAA;UAAAC,SAAS,EAAEC,iBAAA,CAAAA,iBAAiB,CAC1B,6BAA6B,EAC7BC,YAAA,WAAgB,CAACC,MAAM,EACvB;YACEH,SAAS,EAAEE,YAAA,WAAgB,CAACE,MAAM;YAClCC,KAAK,EAAErB,WAAW,KAAKW;UACxB,EACF;UACDW,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACM,MAAM,CAAC;UACrCY,KAAK,EAAE;YACLC,cAAc,EAAEnC,iBAAiB,GAAG,UAAU,GAAG;UAClD;QAAA;UAAAoC,QAAA,GAEDb,UAAA,CAAAc,GACE;YAAAV,SAAS,EAAEC,iBAAA,CAAAA,iBAAiB,CAC1B,kCAAkC,EAClCC,YAAA,WAAgB,CAACS,IAAI;UACtB,EACD,EACFf,UAAA,CAAAc,GAAA,SAAAZ,MAAA,CAAAC,MAAA;YACEC,SAAS,EAAEC,iBAAA,CAAAA,iBAAiB,CAC1B,oCAAoC,EACpCC,YAAA,WAAgB,CAACU,MAAM;UACxB,CAEA;YAAAH,QAAA,EAAAd,MAAM,CAACkB,cAAc;UAAE,CACnB;QAAA,IA3BFlB,MAAM;MA4BR;IAET,CAAC,CAAC;;EAGJ;;AAEG;EACH,MAAMmB,YAAY,GAAG;IACnB,aAAa,EAAE7C,KAAK;IACpB,oBAAoB,EAAEC;GACvB;EAED,OACE0B,UAAA,CAAAc,GAAA,OAAAZ,MAAA,CAAAC,MAAA;IACEC,SAAS,EAAEC,iBAAA,CAAAA,iBAAiB,CAC1B,8BAA8B,EAC9BC,YAAA,WAAgB,CAACa,OAAO,CACzB;IACDR,KAAK,EACAT,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAzB,QAAQ,CACR,EAAAwC,YAAY;EAAA;IAAAL,QAAA,EAGhBrB,aAAa;EAAE,CACb;AAET;AAECpB,OAAmC,CAACgD,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}