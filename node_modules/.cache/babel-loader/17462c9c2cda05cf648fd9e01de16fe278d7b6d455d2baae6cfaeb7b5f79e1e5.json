{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jsxRuntime = require('react/jsx-runtime');\nvar React = require('react');\nvar reactIntersectionObserver_modern = require('../node_modules/.pnpm/react-intersection-observer@9.4.0_react@18.2.0/node_modules/react-intersection-observer/react-intersection-observer.modern.mjs.js');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nconst IntersectionObserverStateContext = React__default[\"default\"].createContext(undefined);\nfunction IntersectionObserverProvider({\n  children\n}) {\n  const [ref, inView] = reactIntersectionObserver_modern.useInView({\n    threshold: 0\n  });\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  const value = {\n    elementObservedRef: ref,\n    isInView: inView\n  };\n  return jsxRuntime.jsx(IntersectionObserverStateContext.Provider, Object.assign({\n    value: value\n  }, {\n    children: children\n  }));\n}\nfunction useIntersectionObserver() {\n  const context = React__default[\"default\"].useContext(IntersectionObserverStateContext);\n  if (context === undefined) {\n    throw new Error('useIntersectionObserver must be used within a IntersectionObserverProvider');\n  }\n  return context;\n}\nexports.IntersectionObserverProvider = IntersectionObserverProvider;\nexports.useIntersectionObserver = useIntersectionObserver;","map":{"version":3,"names":["IntersectionObserverStateContext","React__default","createContext","undefined","IntersectionObserverProvider","children","ref","inView","reactIntersectionObserver_modern","useInView","threshold","value","elementObservedRef","isInView","jsxRuntime","jsx","Provider","Object","assign","useIntersectionObserver","context","useContext","Error"],"sources":["C:\\Users\\OznurYilmaz\\Desktop\\oznur-yilmaz-website\\oznur-yilmaz-website\\node_modules\\hero-slider\\src\\modules\\IntersectionObserver.tsx"],"sourcesContent":["import React from 'react';\nimport { useInView } from 'react-intersection-observer';\n\ntype ProviderProps = React.PropsWithChildren;\n\nconst IntersectionObserverStateContext = React.createContext<\n  | {\n      elementObservedRef: (node?: Element | null | undefined) => void;\n      isInView: boolean;\n    }\n  | undefined\n>(undefined);\n\nfunction IntersectionObserverProvider({ children }: ProviderProps) {\n  const [ref, inView] = useInView({ threshold: 0 });\n\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n  const value = {\n    elementObservedRef: ref,\n    isInView: inView\n  };\n\n  return (\n    <IntersectionObserverStateContext.Provider value={value}>\n      {children}\n    </IntersectionObserverStateContext.Provider>\n  );\n}\n\nfunction useIntersectionObserver() {\n  const context = React.useContext(IntersectionObserverStateContext);\n\n  if (context === undefined) {\n    throw new Error(\n      'useIntersectionObserver must be used within a IntersectionObserverProvider'\n    );\n  }\n\n  return context;\n}\n\nexport { IntersectionObserverProvider, useIntersectionObserver };\n"],"mappings":";;;;;;;;;;;;;;AAKA,MAAMA,gCAAgC,GAAGC,cAAA,WAAK,CAACC,aAAa,CAM1DC,SAAS,CAAC;AAEZ,SAASC,4BAA4BA,CAAC;EAAEC;AAAQ,CAAiB;EAC/D,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGC,gCAAA,CAAAC,SAAS,CAAC;IAAEC,SAAS,EAAE;EAAC,CAAE,CAAC;;;EAIjD,MAAMC,KAAK,GAAG;IACZC,kBAAkB,EAAEN,GAAG;IACvBO,QAAQ,EAAEN;GACX;EAED,OACEO,UAAA,CAAAC,GAAA,CAACf,gCAAgC,CAACgB,QAAQ,EAAAC,MAAA,CAAAC,MAAA;IAACP,KAAK,EAAEA;EAAK;IAAAN,QAAA,EACpDA;EAAQ,GACiC;AAEhD;AAEA,SAASc,uBAAuBA,CAAA;EAC9B,MAAMC,OAAO,GAAGnB,cAAA,WAAK,CAACoB,UAAU,CAACrB,gCAAgC,CAAC;EAElE,IAAIoB,OAAO,KAAKjB,SAAS,EAAE;IACzB,MAAM,IAAImB,KAAK,CACb,4EAA4E,CAC7E;EACF;EAED,OAAOF,OAAO;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}